@using SmartTask.Core.Models
@using System.Security.Claims
@{
	Layout = "_Layout";

	ViewData["Title"] = "Calendar";
	var UserId = User?.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier)?.Value;
	var UserRole = User?.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value;

}

@section Styles {
	<link href='https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css' rel='stylesheet'>

	<style>
		#SelectedProject {
			padding: 12px 16px;
			font-size: 16px;
			border: 1px solid #ccc;
			border-radius: 6px;
			background-color: #ffffff;
			color: #333;
			width: 100%;
			max-width: 300px;
			appearance: none;
			-webkit-appearance: none;
			-moz-appearance: none;
			background-image: url("data:image/svg+xml;utf8,<svg fill='#333' height='24' viewBox='0 0 24 24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/><path d='M0 0h24v24H0z' fill='none'/></svg>");
			background-repeat: no-repeat;
			background-position: right 12px top 50%;
			background-size: 18px;
			transition: all 0.3s ease;
			cursor: pointer;
		}

			#SelectedProject:hover {
				border-color: #666;
				box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
			}


			#SelectedProject:focus {
				outline: none;
				border-color: #007bff;
				box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.25);
			}


			#SelectedProject option {
				padding: 10px;
				background-color: #ffffff;
				color: #333;
			}


			#SelectedProject:disabled {
				background-color: #f5f5f5;
				cursor: not-allowed;
				opacity: 0.7;
			}


		@@media screen and (max-width: 600px) {
			#SelectedProject {
				font-size: 14px;
				padding: 10px 14px;
				max-width: 100%;
			}
		}

		.calendar-container {
			background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
			min-height: 100vh;
			padding: 2rem 0;
			font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
		}

		#calendarWrapper .fc-h-event {
			color: #3788d8 !important;
			border: 1px,solid, #3788d8 !important;
			background-color: #3788d8 !important;
		}

		#calendarWrapper .fc-toolbar-title {
			font-weight: bold !important;
			font-size: 1.25rem !important;
		}

		.fc-event.fc-event-draggable, .fc-event[href] {
			cursor: pointer !important;
			transition: ease-in-out 0.1s;
		}

		.fc .fc-scrollgrid {
			border-collapse: separate !important;
		}

		.fc-event-resizing {
			transition: ease-in-out 0.1s !important;
			z-index: 9999 !important;
		}

		.fc-event-resizable::after {
			content: "";
			position: absolute;
			right: 0;
			bottom: 0;
			width: 10px;
			height: 10px;
			background: #fff;
			border: 2px solid #3788d8;
			border-radius: 2px;
			cursor: se-resize;
		}

		.fc-event {
			transition: transform 0.2s ease-in-out, width 0.2s ease-in-out, height 0.2s ease-in-out, background-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
		}

		a.fc-event {
			color: #fff !important;
		}

		.fc-event-resizing {
			box-shadow: 0 0 10px rgba(55, 136, 216, 0.6);
			opacity: 0.9;
			z-index: 9999 !important;
		}

		.fc-h-event {
			transition: all 0.2s ease-in-out;
		}

		.tooltip-inner {
			background-color: white !important;
			color: #cf331f !important;
			border: 1px solid #cf331f;
			font-weight: bold;
		}

		.custom-tooltip-content {
			display: flex;
			align-items: center;
			color: #cf331f;
		}

			.custom-tooltip-content .tooltip-text {
				margin-left: 5px;
			}

		.tooltip.bs-tooltip-top .arrow::before {
			border-top-color: white !important;
		}
	</style>
}

<select id="SelectedProject" onchange="OnSelection()">
	@foreach (Project project in ViewBag.Projects)
	{
		@if (project.Id == 1)
		{
			<option value="@project.Id" selected>@project.Name</option>
		}
		else
		{
			<option value="@project.Id">@project.Name</option>
		}
	}
</select>
<div id="calendarWrapper">
	<div id="calendar"></div>
</div>
<div class="modal fade" id="taskDetailsModal" tabindex="-1">
	<div class="modal-dialog modal-lg modal-dialog-centered">
		<div class="modal-content shadow" id="taskDetailsContent">
		</div>
	</div>
</div>
<div class="modal fade" id="updateTaskModal" tabindex="-1">
	<div class="modal-dialog modal-dialog-centered">
		<div class="modal-content shadow">
			<div class="modal-header">
				<h5 class="modal-title" id="updateTaskModalTitle">Task Update</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<p id="updateTaskMessage"></p>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-primary" data-bs-dismiss="modal">OK</button>
				
			</div>
		</div>
	</div>
</div>

@section Scripts {
	<script src="~/lib/jquery/dist/jquery.min.js"></script>
	<script src="~/js/index.global.min.js"></script>
	<script>
		const userRole = "@UserRole";
		var data = [];

		$(document).ready(function () {
			var projectId = document.getElementById("SelectedProject").value;
			$.ajax({
				url: '@Url.Action("GetTasksForProjectOfUser", "Calendar")',
				method: 'GET',
				data: { ProjectId: projectId,UserId:"@UserId" },
				success: function (Tasks) {
					data = Tasks;
					console.log("hey");
					initializeCalendar();
				},
				error: function () {
					alert("Failed to load tasks.");
							console.log("no");
					$('#taskTable').slideDown(200);
				}
			});
		});

		function OnSelection() {
			var projectId = document.getElementById("SelectedProject").value;
			$.ajax({
				url: '@Url.Action("GetTasksForProjectOfUser", "Calendar")',
				method: 'GET',
				data: { ProjectId: projectId ,UserId:"@UserId" },
				success: function (Tasks) {
					data = Tasks;
					initializeCalendar();
					console.log(data);
				},
				error: function () {
					alert("Failed to load tasks.");
					$('#taskTable').slideDown(200);
				}
			});
		}

		function asyncAjax() {
			var projectId = document.getElementById("SelectedProject").value;
			return new Promise((resolve, reject) => {
				$.ajax({
					url: '@Url.Action("GetProjectById", "Calendar")',
					method: 'GET',
					data: { ProjectId: projectId },
					success: function (Project) {
						resolve(Project);
					},
					error: function () {
						alert("Failed to load tasks.");
						$('#taskTable').slideDown(200);
						reject("AJAX call failed");
					}
				});
			});
		}

		async function initializeCalendar() {
			var calendarEl = document.getElementById('calendar');
			let project = await asyncAjax();
			console.log(project);
			const now = new Date();
			const projectStart = new Date(project.startDate);
			const projectEnd = new Date(project.endDate);

			var calendar = new FullCalendar.Calendar(calendarEl, {
				timeZone: 'UTC',
				themeSystem: 'bootstrap5',
				headerToolbar: {
					left: 'prev,next today',
					center: 'title',
					right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'
				},
				initialDate: now,
				navLinks: true,
				nowIndicator: true,
				weekNumbers: true,
				weekNumberCalculation: 'ISO',
				editable:userRole.toLowerCase() === "admin" || userRole === "manager",
				durationEditable: userRole.toLowerCase() === "admin" || userRole === "manager",
				eventResizableFromStart: userRole.toLowerCase() === "admin" || userRole === "manager",
				selectable: true,
				dayMaxEvents: true,
				events: data,
				eventAllow: function (dropInfo, draggedEvent) {
					const start = dropInfo.start;
					const end = dropInfo.end || dropInfo.start;
					const isWithinProject = start >= projectStart && end <= projectEnd;
					const taskStart = draggedEvent.extendedProps.taskStart
						? new Date(draggedEvent.extendedProps.taskStart)
						: projectStart;
					const taskEnd = draggedEvent.extendedProps.taskEnd
						? new Date(draggedEvent.extendedProps.taskEnd)
						: projectEnd;
					const isWithinTask = start >= taskStart && end <= taskEnd;
					return isWithinProject && isWithinTask;
				},
				eventClick: function (info) {
					loadTaskDetails(info.event.id);
				},
				eventDrop: function (info) {
					let startDate = info.event.start.toISOString().split('T')[0];
					let endDate = info.event.end.toISOString().split('T')[0];
					const taskVM = {
						id: info.event.id,
						start: startDate,
						end: endDate,
					};
					console.log(taskVM.start);
					console.log(taskVM.end);
					UpdateTask(taskVM);
				},
				eventResize: function (info) {
					let startDate = info.event.start.toISOString().split('T')[0];
					let endDate = info.event.end.toISOString().split('T')[0];
					const taskVM = {
						id: info.event.id,
						start: startDate,
						end: endDate,
					};
					console.log(taskVM.start);
					console.log(taskVM.end);
					UpdateTask(taskVM);
				},
					eventDidMount: function(info) {
				if (!(userRole.toLowerCase() === "admin" || userRole.toLowerCase() === "manager")) {
			$(info.el).tooltip({
				title: `<span class="custom-tooltip-content">
							⚠️ <span class="tooltip-text">You are not authorized to Update this task's Timeline you must be an admin or manager!</span>
						</span>`,
				placement: "top",
				trigger: "hover",
				container: "body",
				html: true 
			});
		}

		}


			});

			calendar.render();
		}

		function loadTaskDetails(taskId) {
			$.ajax({
				url: '@Url.Action("Details", "Task")/' + taskId,
				type: 'GET',
				success: function(response) {
					$('#taskDetailsContent').html(response);
					var detailsModal = new bootstrap.Modal(document.getElementById('taskDetailsModal'));
					detailsModal.show();
				},
				error: function(error) {
					console.log('Error loading task details:', error);
					alert('Failed to load task details. Please try again.');
				}
			});
		}

		function UpdateTask(taskVM) {
			$.ajax({
				url: '@Url.Action("UpdateTask", "Calendar")',
				method: 'Post',
				data: { TaskVM: taskVM },
				success: function (res) {
					$('#updateTaskMessage').text(res);
					var updateModal = new bootstrap.Modal(document.getElementById('updateTaskModal'));
					updateModal.show();
				},
				error: function (xhr) {
					const errorMsg = xhr.responseJSON?.message || "Failed to increase task status. Please try again.";
					$('#updateTaskMessage').text(errorMsg);
					var updateModal = new bootstrap.Modal(document.getElementById('updateTaskModal'));
					updateModal.show();
					OnSelection();
				}
			});
		}
	</script>
}