@model SmartTask.Web.ViewModels.ProjectVM.ProjectIndexViewModel

@{
    ViewData["Title"] = "Projects";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="mb-0">Projects</h1>

        <secure-content asp-area="" asp-controller="Project" asp-action="Create">
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus me-1"></i> Create New
            </a>
        </secure-content>
    </div>

    <form asp-action="Index" method="get" class="mb-4">
        <div class="input-group">
            <input type="text"
                   name="searchString"
                   value="@Model.SearchString"
                   class="form-control"
                   placeholder="Search by name or description..." />
            <button type="submit" class="btn btn-outline-secondary">
                <i class="fas fa-search"></i>
            </button>
        </div>
    </form>

    @if (!string.IsNullOrWhiteSpace(Model.SearchString))
    {
        <p class="text-muted">Showing results for "<strong>@Model.SearchString</strong>"</p>
    }

    <div class="card shadow">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>Name</th>
                            <th>Owner</th>
                            <th>Start Date</th>
                            <th>End Date</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var project in Model.Projects)
                        {
                            <tr>
                                <td>@project.Name</td>
                                <td>@project.Owner?.FullName</td>
                                <td>@project.StartDate?.ToString("dd MMM yyyy")</td>
                                <td>@project.EndDate?.ToString("dd MMM yyyy")</td>
                                <td>
                                    <span class="badge @GetStatusBadge(project.Status)">
                                        @project.Status
                                    </span>
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <secure-content asp-area="" asp-controller="Project" asp-action="Details">
                                            <a asp-action="Details" asp-route-id="@project.Id"
                                               class="btn btn-sm btn-outline-primary">
                                                <i class="fas fa-eye me-1"></i> Details
                                            </a>
                                        </secure-content>

                                        <secure-content asp-area="" asp-controller="Project" asp-action="Edit">
                                            <a asp-action="Edit" asp-route-id="@project.Id"
                                               class="btn btn-sm btn-outline-success">
                                                <i class="fas fa-edit me-1"></i> Update
                                            </a>
                                        </secure-content>

                                        <secure-content asp-area="" asp-controller="Project" asp-action="Delete">
                                            <a asp-action="Delete" asp-route-id="@project.Id"
                                               class="btn btn-sm btn-outline-danger"
                                               onclick="return confirm('Are you sure you want to delete this project?')">
                                                <i class="fas fa-trash-alt me-1"></i> Delete
                                            </a>
                                        </secure-content>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    @{
        var prevDisabled = !Model.Projects.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.Projects.HasNextPage ? "disabled" : "";
    }

    <div class="d-flex justify-content-center mt-4">
        <nav>
            <ul class="pagination">
                <li class="page-item @prevDisabled">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-page="@(Model.Projects.PageIndex - 1)"
                       asp-route-searchString="@Model.SearchString">
                        Previous
                    </a>
                </li>
                @for (int i = 1; i <= Model.Projects.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.Projects.PageIndex ? "active" : "")">
                        <a class="page-link"
                           asp-action="Index"
                           asp-route-page="@i"
                           asp-route-searchString="@Model.SearchString">
                            @i
                        </a>
                    </li>
                }
                <li class="page-item @nextDisabled">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-page="@(Model.Projects.PageIndex + 1)"
                       asp-route-searchString="@Model.SearchString">
                        Next
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</div>

@functions {
    string GetStatusBadge(string status)
    {
        return status switch
        {
            "Active" => "bg-success",
            "Pending" => "bg-warning text-dark",
            "Completed" => "bg-primary",
            _ => "bg-secondary"
        };
    }
}
