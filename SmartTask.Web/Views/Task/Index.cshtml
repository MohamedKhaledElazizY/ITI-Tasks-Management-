@using SmartTask.Web.ViewModels
@model IEnumerable<TaskViewModel>
@using SmartTask.Core.Models.Enums
@{
    ViewData["Title"] = "Tasks Overview";
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">Tasks Overview</h2>
        <a asp-action="Create" class="btn btn-success">
            <i class="bi bi-plus-circle"></i> Create New Task
        </a>
    </div>

    <div class="card shadow-sm mb-4">
        <div class="card-header bg-light">
            <strong>Filter Tasks</strong>
        </div>
        <div class="card-body">
            <form id="filterForm" class="row g-3">
                <div class="  col-md-3">
                    <label  class="form-label">Status</label>
                    <select  class="form-select"name="Status"id="Status">
                        <option value="@null">Select-Status</option>
                        <option value="@Status.Todo">ToDo</option>
                        <option value="@Status.InProgress">InProgress</option>
                        <option value="@Status.Done">Done</option>
                        <option value="@Status.Cancelled">Cancelled</option>
                    </select>
                </div>

                <div class="col-md-3">
                    <label class="form-label">Start Date</label>
                    <input type="date" name="StartDate" class="form-control" />
                </div>

                <div class="col-md-3">
                    <label class="form-label">End Date</label>
                    <input type="date" name="EndDate" class="form-control" />
                </div>

                <div class="col-md-3">
                    <label class="form-label">Assigned To</label>
                    <select name="AssignedToUserId" class="form-select">
                        <option value="@null">-- Select User --</option>
                        @foreach (var user in ViewBag.Users)
                        {
                            <option value="@user.Id">@user.FullName</option>
                        }
                    </select>
                </div>

                @* Optional Filters: Uncomment if needed *@
                @* 
                <div class="col-md-3">
                    <label class="form-label">Department</label>
                    <select name="DepartmentId" class="form-select">...</select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Branch</label>
                    <select name="BranchId" class="form-select">...</select>
                </div>
                *@

                <div class="col-12 d-flex justify-content-end">
                    <button type="submit" class="btn btn-primary mt-2">
                        <i class="bi bi-funnel-fill"></i> Filter
                    </button>
                </div>
            </form>
        </div>
    </div>

    <div id="taskTable">
        <partial name="PartialViews/_TaskTable" model="Model" />
    </div>
</div>

<div class="modal fade" id="taskDetailsModal" tabindex="-1">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content shadow" id="taskDetailsContent">
            <!-- Content will be loaded here -->
        </div>
    </div>
</div>





@section Scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#filterForm').on('submit', function (e) {
                e.preventDefault();

                $('#taskTable').slideUp(200, function () {
                    $.ajax({
                        url: '@Url.Action("Filter", "Task")',
                        method: 'GET',
                        data: $('#filterForm').serialize(),
                        success: function (partialView) {
                            $('#taskTable').html(partialView).slideDown(200);
                            
                        },
                        error: function () {
                            alert("Failed to load tasks.");
                            $('#taskTable').slideDown(200); // restore if error
                        }
                    });
                });
            });
        });

        function loadTaskDetails(taskId) {
            $.ajax({
                url: '@Url.Action("Details", "Task")/' + taskId,
                type: 'GET',
                success: function(response) {
                    $('#taskDetailsContent').html(response);
                    var detailsModal = new bootstrap.Modal(document.getElementById('taskDetailsModal'));
                    detailsModal.show();
                },
                error: function(error) {
                    console.log('Error loading task details:', error);
                    alert('Failed to load task details. Please try again.');
                }
            });
        }
    </script>
}

