@using SmartTask.Web.ViewModels
@using SmartTask.Core
@using SmartTask.Core.Models.Enums

@model IEnumerable<TaskViewModel>

<style>
    .task-table thead {
        background: linear-gradient(90deg, #e0eafc 0%, #cfdef3 100%);
        color: #333;
    }

    .task-table tbody tr:nth-child(odd) {
        background-color: #f8f9fa;
    }

    .task-table tbody tr:nth-child(even) {
        background-color: #e3f2fd;
    }

    .task-table tbody tr:hover {
        background-color: #ffe082 !important;
        transition: background 0.2s;
    }

    .action-icons .btn-action {
        margin-right: 4px;
        border-radius: 50%;
        width: 32px;
        height: 32px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        font-size: 1.1rem;
        transition: background 0.2s, color 0.2s;
    }

    .action-icons .btn-outline-primary:hover {
        background: #0d6efd;
        color: #fff !important;
    }

    .action-icons .btn-outline-success:hover {
        background: #198754;
        color: #fff !important;
    }

    .action-icons .btn-outline-danger:hover {
        background: #dc3545;
        color: #fff !important;
    }
</style>

<table class="table task-table table-striped table-hover">
    <thead>
        <tr>
            @* <th> *@
            @*     @Html.DisplayNameFor(model => model.Id) *@
            @* </th> *@
            <th>
                @Html.DisplayNameFor(model => model.ProjectName)
            </th>
            @* <th> *@
            @*     @Html.DisplayNameFor(model => model.AssignedToId) *@
            @* </th> *@
            @* <th> *@
            @*     @Html.DisplayNameFor(model => model.ParentTaskId) *@
            @* </th> *@
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Priority)
            </th>
            @* <th> *@
            @*     @Html.DisplayNameFor(model => model.CreatedById) *@
            @* </th> *@
            @* <th> *@
            @*     @Html.DisplayNameFor(model => model.UpdatedById) *@
            @* </th> *@
            <th>
                @Html.DisplayNameFor(model => model.CreatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdatedAt)
            </th>
             <th>
                Actions
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                @* <td> *@
                @*     @Html.DisplayFor(modelItem => item.Id) *@
                @* </td> *@
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectName)
                </td>
                @* <td> *@
                @*     @Html.DisplayFor(modelItem => item.AssignedToId) *@
                @* </td> *@
                @* <td> *@
                @*     @Html.DisplayFor(modelItem => item.ParentTaskId) *@
                @* </td> *@
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    <span class="badge bg-@GetStatusColor(item.Status.ToString()) text-white">
                        @item.Status
                    </span>

                </td>
                <td>
                    @{
                        string priorityClass = item.Priority switch
                        {
                            Priority.Low => "bg-success",
                            Priority.Medium => "bg-warning",
                            Priority.High => "bg-danger",

                            _ => "bg-secondary"
                        };
                    }
                    <span class="badge text-white @priorityClass">
                        @item.Priority
                    </span>
                </td>
                @* <td> *@
                @*     @Html.DisplayFor(modelItem => item.CreatedById) *@
                @* </td> *@
                @* <td> *@
                @*     @Html.DisplayFor(modelItem => item.UpdatedById) *@
                @* </td> *@
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedAt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UpdatedAt)
                </td>
                <td>
                    @* <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> *@
                    @* <a asp-action="Delete" asp-route-id="@item.Id">Delete</a> *@
                    <div class="action-icons">
                        @* <secure-content asp-area="" asp-controller="Task" asp-action="Details"> *@
                        @*     <a asp-action="Details" asp-route-id="@item.Id" *@
                        @*        class="btn btn-sm btn-outline-primary btn-action" id="openPopup" *@
                        @*        title="Details"> *@
                        @*         <i class="fas fa-eye"></i>  *@
                        @*     </a> *@
                        @* </secure-content> *@
                        <secure-content asp-area="" asp-controller="Task" asp-action="Details">
                            <button class="btn btn-info btn-action" id="openPopup"
                                    onclick="loadTaskDetails(@item.Id)">
                                <i class="bi bi-eye"></i>
                            </button>

                        </secure-content>
                        <secure-content asp-area="" asp-controller="Task" asp-action="Edit">
                            <a asp-action="Edit" asp-route-id="@item.Id"
                               class="btn btn-sm btn-outline-warning btn-action"
                               title="Edit">
                                <i class="fas fa-pen"></i>
                            </a>
                        </secure-content>

                        <secure-content asp-area="" asp-controller="Task" asp-action="DeleteTask">
                            <a asp-action="DeleteTask" asp-route-id="@item.Id"
                               class="btn btn-sm btn-outline-danger btn-action"
                               title="Delete"
                               onclick="return confirm('Are you sure you want to delete this project?')">
                                <i class="fas fa-trash"></i>
                            </a>
                        </secure-content>
                    </div>

                </td>
            </tr>
        }
    </tbody>
</table>

@functions {
    public string GetStatusColor(string status)
    {
        return status switch
        {
            "Todo" => "info",
            "InProgress" => "warning",
            "Done" => "success",
            "Cancelled" => "danger",
            _ => "secondary"
        };
    }
}