@using SmartTask.Core.Models
@model List<TaskDendenciesViewModel>

<div class="mb-3">
    <label class="form-label fw-bold fs-5">Select Task Dependencies</label>
    <input type="hidden" id="SelectedTaskId" name="SelectedTaskId" />

    <div class="row g-3">
        @foreach (var task in Model)
        {
            <div class="col-12 col-md-6">
                <div class="border rounded p-3 shadow-sm bg-light">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox"
                               name="SelectedTaskIds"
                               value="@task.Id"
                               id="task-@task.Id"
                        @(task.IsSelected ? "checked" : "")
                               onchange="checkDropDependencyType(`task-${@task.Id}`, @task.Id)" />
                        <label class="form-check-label fw-semibold" for="task-@task.Id">
                            @task.Name
                        </label>
                    </div>

                    <div class="mt-2">
                        <select name="dependencyTypes"
                                class="form-select"
                                id="dependency-@task.Id"
                        @(task.IsSelected ? "" : "disabled")>
                            @if (!task.IsSelected)
                            {
                                <option value="0">Select Dependency Type</option>
                            }
                            else if (task.DependencyType == DependencyType.StartToStart)
                            {
                                <option value="@DependencyType.StartToStart">Start To Start</option>
                                <option value="@DependencyType.FinishToStart">Finish To Start</option>
                            }
                            else
                            {
                                <option value="@DependencyType.FinishToStart">Finish To Start</option>
                                <option value="@DependencyType.StartToStart">Start To Start</option>
                            }
                        </select>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script>
    function checkDropDependencyType(elmId, taskId) {
        const checkbox = document.getElementById(elmId);
        const selectBox = document.getElementById(`dependency-${taskId}`);

        if (checkbox.checked) {
            selectBox.disabled = false;
            selectBox.innerHTML = `<option value="@DependencyType.StartToStart">Start To Start</option>
                                   <option value="@DependencyType.FinishToStart">Finish To Start</option>`;
        } else {
            selectBox.disabled = true;
            selectBox.innerHTML = `<option value="0">Select Dependency Type</option>`;
        }
    }
</script>
