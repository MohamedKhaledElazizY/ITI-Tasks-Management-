@model SmartTask.Core.Models.Task
@{
                                string status = Model.Status?.ToLower();
                                bool isCancelled = status == "cancel";
                                int filledSegments = status switch
                                {
                                    "to do" => 1,
                                    "in progress" or "cancel" => 2,
                                    "done" => 3,
                                    _ => 0
                                };
                                string barColor = status switch
                                {
                                    "to do" => "bg-primary",
                                    "in progress" => "bg-warning",
                                    "cancel" => "bg-danger",
                                    "done" => "bg-success",
                                    _ => "bg-secondary"
                                };
                                string textClass = isCancelled ? "text-decoration-line-through text-muted" : "";
                            
}


<div class="modal-header">
    <h5 class="modal-title">Task Details: @Model.Title</h5>
    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
</div>
<div class="modal-body">
    <div class="row">
        <div class="col-md-6">
            <div class="mb-3">
                <h6 class="text-muted">Basic Information</h6>
                <hr />
                <p><strong>Task ID:</strong> #@Model.Id</p>
                <p><strong>Title:</strong> @Model.Title</p>
                <p>
                    <strong>Priority:</strong>
                    <span class="badge @(Model.Priority == "High" ? "bg-danger" : Model.Priority == "Medium" ? "bg-warning text-dark" : "bg-success")">
                        @Model.Priority
                    </span>
                </p>
                <p>
                    <strong>Status:</strong>
                    <span class="badge @barColor">@Model.Status</span>
                </p>
            </div>
        </div>
        <div class="col-md-6">
            <div class="mb-3">
                <h6 class="text-muted">Progress Details</h6>
                <hr />
                <p class="mb-1"><strong>Current Progress:</strong> @Model.Status</p>
                <div class="d-flex align-items-center flex-column mb-3">
                    <div class="d-flex flex-row w-100" style="gap: 2px;">

                        @for (int i = 1; i <= 3; i++)
                        {
                            <div class="flex-fill rounded" style="height: 8px; background-color: #e0e0e0;">
                                @if (i <= filledSegments)
                                {
                                    <div class="@barColor h-100 w-100 rounded"></div>
                                }
                            </div>
                        }
                    </div>

                </div>
                <p ><strong>Start Date:</strong> @Model.StartDate?.Date.ToString("dd-MM-yyyy")</p>
                <p><strong>Time Remaining:</strong> @((Model.EndDate?.Day - DateTime.Now.Day < 0 ? 0 : Model.EndDate?.Day - DateTime.Now.Day)) days</p>
            </div>
        </div>
    </div>
    <div class="row mt-3">
        <div class="col-12">
            <h6 class="text-muted">Description</h6>
            <hr />
            <p>@Model.Description</p>
        </div>
    </div>
</div>
<div class="modal-footer">
    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
</div>
