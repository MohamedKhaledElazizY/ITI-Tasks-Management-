@*@using SmartTask.Core.Models

@model SmartTask.Web.ViewModels.UsersViewModel

@{
    ViewData["Title"] = "Users Without Department";
    var prevDisabled = !Model.Users.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Users.HasNextPage ? "disabled" : "";
    var departments = ViewBag.Departments as List<Department>;
}

<h2>Users Without Department</h2>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Full Name</th>
            <th>Email</th>
            <th>Assign User</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model.Users)
        {
            <tr>
                <td>@user.FullName</td>
                <td>@user.Email</td>
                @* <td> <a class="btn btn-sm btn-warning" asp-action="AssignToDepartment"> Assign to department</a></td> 
                <td>
                    <secure-content asp-area="" asp-controller="User" asp-action="Edit">
                       <form asp-action="AssignToDepartment" method="post">
                        <input type="hidden" name="userId" value="@user.Id" />
                        <select name="departmentId" required>
                            <option value="">-- Select --</option>
                            @foreach (var depth in departments)
                            {
                                <option value="@depth.Id">@depth.Name</option>
                            }
                        </select>
                        <button type="submit">Assign</button>
                    </form>
                    </secure-content>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination Controls -->
<div class="d-flex justify-content-between align-items-center">
    <a asp-action="WithoutDepartment"
       asp-route-page="@(Model.Users.PageIndex - 1)"
       class="btn btn-primary @prevDisabled">
        Previous
    </a>

    <span>Page @Model.Users.PageIndex of @Model.Users.TotalPages</span>

    <a asp-action="WithoutDepartment"
       asp-route-page="@(Model.Users.PageIndex + 1)"
       class="btn btn-primary @nextDisabled">
        Next
    </a>
</div>
*@

@using SmartTask.Core.Models
@model SmartTask.Web.ViewModels.UsersViewModel

@{
    ViewData["Title"] = "Users Without Department";
    var prevDisabled = !Model.Users.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Users.HasNextPage ? "disabled" : "";
    var branches = ViewBag.Branches as List<Branch>;
}

<h2>Users Without Department</h2>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Full Name</th>
            <th>Email</th>
            <th>Branch</th>
            <th>Department</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model.Users)
  {
            <tr>
                <td>@user.FullName</td>
                <td>@user.Email</td>
                <td>
                    @if (user.Branch != null)
                    {
                        <span>@user.Branch.Name</span>
                    }
                    else
                    {
                        <form asp-action="AssignToBranch" method="post">
                            <input type="hidden" name="userId" value="@user.Id" />
                            <select name="branchId" class="form-select" required>
                                <option value="">-- Select Branch --</option>
                                @if (branches != null)
                                {
                                    foreach (var branch in branches)
                                    {
                                        <option value="@branch.Id">@branch.Name</option>
                                    }
                                }
                            </select>
                            <button type="submit" class="btn btn-sm btn-outline-primary mt-1">Assign</button>
                        </form>
                    }
   </td>
                <td>
                    @if (user.Branch != null)
                    {
                        var hasDepartments = user.Branch.BranchDepartments?.Any(bd => bd.Department != null) ?? false;

                        if (hasDepartments)
                        {
                            <form asp-action="AssignToDepartment" method="post">
                                <input type="hidden" name="userId" value="@user.Id" />
                                <select name="departmentId" class="form-select dept-dropdown" required>
                                    <option value="">-- Select Department --</option>
                                    @foreach (var bd in user.Branch.BranchDepartments)
                                    {
                                        @if (bd.Department != null)
                                        {
                                            <option value="@bd.Department.Id">@bd.Department.Name</option>
                                        }
                                    }
                                </select>
                                <button type="submit" class="btn btn-sm btn-outline-success mt-1">Assign</button>
                            </form>
                        }
                        else
                        {
                            <span class="text-danger">No departments available in this branch</span>
                        }
                    }
                    else
                    {
                        <span class="text-muted">Assign branch first</span>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination Controls -->
<div class="d-flex justify-content-between align-items-center mt-3">
    <a asp-action="WithoutDepartment"
       asp-route-page="@(Model.Users.PageIndex - 1)"
       class="btn btn-primary @prevDisabled">
        Previous
    </a>

    <span>Page @Model.Users.PageIndex of @Model.Users.TotalPages</span>

    <a asp-action="WithoutDepartment"
       asp-route-page="@(Model.Users.PageIndex + 1)"
       class="btn btn-primary @nextDisabled">
        Next
    </a>
</div>