@using SmartTask.Core.Models
@using SmartTask.Web.ViewModels.DepartmentVM
@model DepartmentFormViewModel

@{
    ViewData["Title"] = "Create New Department";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div class="d-flex align-items-center">
            <i class="fas fa-plus-circle fa-2x text-primary me-2"></i>
            <h3 class="mb-0">Create New Department</h3>
        </div>
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left me-1"></i> Back to List
        </a>
    </div>

    <div class="card shadow-sm p-4">
        <form asp-action="Create" method="post">
            <div class="mb-3">
                <label asp-for="Name" class="form-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="ManagerId" class="form-label">Manager</label>
                <select asp-for="ManagerId" class="form-select" asp-items="ViewBag.Managers">
                    <option value="">Select a Manager</option>
                </select>
                <span asp-validation-for="ManagerId" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label class="form-label">Select Users to Assign:</label>
                <select id="userDropdown" class="form-select">
                    <option value="">Select a User</option>
                    @foreach (var user in ViewBag.AllUsers)
                    {
                        <option value="@user.Id" data-name="@user.FullName">@user.FullName</option>
                    }
                </select>
            </div>

            <div class="mb-3">
                <label class="form-label">Assigned Users:</label>
                <div id="assignedUsersContainer"></div>
            </div>

            <button type="submit" class="btn btn-primary">
                <i class="fas fa-save me-1"></i> Create Department
            </button>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.getElementById('userDropdown').addEventListener('change', function () {
            const selectedOption = this.options[this.selectedIndex];
            const userId = selectedOption.value;
            const userName = selectedOption.dataset.name;

            if (!userId) return;

            if (document.getElementById('user_' + userId)) return;

            const container = document.getElementById('assignedUsersContainer');
            const div = document.createElement('div');
            div.className = 'form-check';
            div.innerHTML = `
                <input class="form-check-input" type="checkbox" name="SelectedUserIds" value="${userId}" id="user_${userId}" checked>
                <label class="form-check-label" for="user_${userId}">${userName}</label>
            `;
            container.appendChild(div);
        });
    </script>
}